package com.werghis.flashcards;

import android.app.Activity;
import android.appwidget.AppWidgetManager;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.CheckBox;


import com.werghis.flashcards.databinding.FlashcardWidgetConfigureBinding;

import java.util.Date;

/**
 * The configuration screen for the {@link FlashcardWidget FlashcardWidget} AppWidget.
 */
public class FlashcardWidgetConfigureActivity extends Activity {


    int mAppWidgetId = AppWidgetManager.INVALID_APPWIDGET_ID;

    private FlashcardWidgetConfigureBinding binding;
    EditText mRefreshFreqText;
    Spinner mTopicSpinner;
    CheckBox mRandomizeCheckBox;

    public FlashcardWidgetConfigureActivity() {
        super();
    }

    View.OnClickListener mOnClickListener = new View.OnClickListener() {
        public void onClick(View v) {
            final Context context = FlashcardWidgetConfigureActivity.this;

            // When the button is clicked, store the string locally
            String freqText = mRefreshFreqText.getText().toString();
            savePref(Constants.PREF_FREQ_KEY, context, mAppWidgetId, freqText);

            savePref(Constants.PREF_RANDOMIZE_KEY, context, mAppWidgetId, Boolean.toString(mRandomizeCheckBox.isChecked()));
            savePref(Constants.PREF_TOPIC_KEY, context, mAppWidgetId, mTopicSpinner.getSelectedItem().toString());

            // It is the responsibility of the configuration activity to update the app widget
            AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context);
            //FlashcardWidget.getData(context, appWidgetManager, mAppWidgetId);
            FlashcardUtils.updateWidgets(context);

            // Make sure we pass back the original appWidgetId
            Intent resultValue = new Intent();
            resultValue.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, mAppWidgetId);
            setResult(RESULT_OK, resultValue);
            finish();
        }
    };

    // Write the preference to the SharedPreferences object for this widget
    public static void savePref(String key, Context context, int appWidgetId, String text) {
        SharedPreferences.Editor prefs = context.getSharedPreferences(Constants.PREFS_NAME, 0).edit();
        prefs.putString( key, text);
        prefs.apply();
    }

    // Read the preference from the SharedPreferences object for this widget.
    public static String loadPref(String key, Context context, int appWidgetId) {
        SharedPreferences prefs = context.getSharedPreferences(Constants.PREFS_NAME, 0);
        String value = prefs.getString(key, null);
        return value;
    }

    public static void deletePref(String key, Context context, int appWidgetId) {
        SharedPreferences.Editor prefs = context.getSharedPreferences(Constants.PREFS_NAME, 0).edit();
        prefs.remove(key);
        prefs.apply();
    }

    @Override
    public void onCreate(Bundle icicle) {
        super.onCreate(icicle);

        // Set the result to CANCELED.  This will cause the widget host to cancel
        // out of the widget placement if the user presses the back button.
        setResult(RESULT_CANCELED);

        binding = FlashcardWidgetConfigureBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        mRefreshFreqText = binding.refreshFreq;
        mRandomizeCheckBox = binding.isRandomize;
        mTopicSpinner = binding.topicName;

        binding.saveButton.setOnClickListener(mOnClickListener);

        // Find the widget id from the intent.
        Intent intent = getIntent();
        Bundle extras = intent.getExtras();
        if (extras != null) {
            mAppWidgetId = extras.getInt(
                    AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);
        }

        // If this activity was started with an intent without an app widget ID, finish with an error.
        if (mAppWidgetId == AppWidgetManager.INVALID_APPWIDGET_ID) {
            finish();
            return;
        }

        mRefreshFreqText.setText(loadPref(Constants.PREF_FREQ_KEY, FlashcardWidgetConfigureActivity.this, mAppWidgetId));
        mRandomizeCheckBox.setChecked(Boolean.parseBoolean(loadPref(Constants.PREF_RANDOMIZE_KEY, FlashcardWidgetConfigureActivity.this, mAppWidgetId)));
        String[] TOPICS = new String[] {
              "", "Test", "Gospel", "God", "Psalms"
        };

        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
                android.R.layout.simple_dropdown_item_1line, TOPICS);
        mTopicSpinner.setAdapter(adapter);

        int selectionPosition= adapter.getPosition(loadPref(Constants.PREF_TOPIC_KEY, FlashcardWidgetConfigureActivity.this, mAppWidgetId));
        mTopicSpinner.setSelection(selectionPosition);
    }
}